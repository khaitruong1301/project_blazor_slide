@page "/admin/product-management"
@layout AdminMasterPage
@inject ProductStoreService prdService;
@using Microsoft.AspNetCore.SignalR.Client;
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item  " aria-current="page">
            <NavLink href="/admin/product-management" class="text-decoration-none active">
                Product management
            </NavLink>
        </li>
        <li class="breadcrumb-item " aria-current="page">
            <NavLink href="/admin/product" class=" text-decoration-none nav-link w-auto d-inline-block">
                Add Product
            </NavLink>

        </li>
    </ol>
</nav>
<div class="container w-75 mx-auto">
    <h3>Product management</h3>

    @* <button class="btn btn-dark" @onclick="SendMessageToServer">Send Message</button> *@

    <NavLink class="btn btn-success my-2" href="/admin/product">Add new product</NavLink>
    <div class="input-group mb-2">
        <input class="input-text form-control" placeholder="Search product ..." />
        <button class="btn btn-success"> Search</button>
    </div>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Image</th>
                <th>Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (ProductStore item in items.Where(n => n.Id <= 10))
            {
                <tr>
                    <td>@item.Id</td>
                    <td><img src="@item.ImgLink" alt="..." width="50" height="50" /></td>
                    <td>@item.Price</td>
                    <td>
                        <button class="btn btn-danger mx-2">Del</button>
                        <NavLink class="btn btn-success" href="/admin/product/">Edit</NavLink>

                    </td>
                </tr>
            }
        </tbody>
    </table>
    @* <button class="btn btn-primary" @onclick="HandleButtonClick">Click Me</button> *@
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item"><a class="page-link" href="#">Previous</a></li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item"><a class="page-link" href="#">Next</a></li>
        </ul>
    </nav>

</div>

@code {
    @inject NavigationManager Navigation

    @* private HubConnection? connection; *@
    public IEnumerable<ProductStore> items = new List<ProductStore>();
    // Hàm xử lý khi button được nhấn
    public void SendMessageToServer()
    {
        Console.WriteLine("123");

    }

    private void HandleButtonClick()
    {
        Console.WriteLine("Button clicked!");
    }
    protected override async Task OnInitializedAsync()
    {
        items = await prdService.GetAllProductAsync();
        @*//Cấu hình
        connection = new HubConnectionBuilder()
        .WithUrl(Navigation.ToAbsoluteUri("/product-hub")) // "/product-hub" là đường dẫn của Hub được map trên server
        .Build();
        //Mở kết nối với server
        await connection.StartAsync();
        // Sau khi kết nối thành công, client có thể giao tiếp với server
        // Đăng ký sự kiện để nhận thông điệp từ server

        connection.On<string>("ReceiveMessage", (message) =>
        {
            Console.WriteLine($"Message received: {message}");
        }); *@


    }

    // Dispose kết nối khi component không còn được sử dụng
    @* public async ValueTask DisposeAsync()
    {
        if (connection is not null)
        {
            await connection.DisposeAsync();
        }
    } *@

}
