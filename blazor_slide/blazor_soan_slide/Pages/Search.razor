@page "/search"
@using Microsoft.Extensions.Primitives
@using Newtonsoft.Json
@inject HttpClient Http
@inject NavigationManager Navigation


@inject HttpClient Http

@layout HomePageMaster

<div class="container">
    <h3>Search Results for: "@keyword"</h3>
    <EditForm class="d-flex my-2 my-lg-0" EditContext="editContext" OnSubmit="HandleSubmit">
        <input class="form-control me-sm-2" type="text" placeholder="Search" @bind-value="keyword" />
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">
            Search
        </button>
    </EditForm>

    <div class="row">
        @foreach (var item in items)
        {
            <div class="col-4 mt-2">
                <div class="card">
                    <img src="@item.Image" alt="..." />
                    <div class="card-body">
                        <h3>@item.Name</h3>
                        <p>@item.Price</p>
                        <a href="/detail/@item.Id" class="btn btn-dark">Detail</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private string keyword { get; set; }
    private EditContext editContext;
    private IEnumerable<ProductModel> items = new List<ProductModel>();


    protected async void HandleSubmit()
    {
        // Khởi tạo EditContext với một đối tượng dynamic hoặc new object()
        Navigation.NavigateTo($"/search?k={keyword}");
        searchByKeyword(keyword);

    }

    protected override async Task OnParametersSetAsync()
    {
        // Khởi tạo EditContext với một đối tượng dynamic hoặc new object()
        editContext = new EditContext(new object());
        // Lấy giá trị query parameter từ URL
        var uri = new Uri(Navigation.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        string k = query.GetValueOrDefault("k");
        searchByKeyword(k);
    }
    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(Navigation.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        string k = query.GetValueOrDefault("k");
        searchByKeyword(k);
    }

    protected  void searchByKeyword(string k = "")
    {

        var response = 
        Http.GetFromJsonAsync<HttpResponse<ProductModel[]>>($"https://apistore.cybersoft.edu.vn/api/Product?keyword={k}").Result;
        items = response.content;
    }


}
