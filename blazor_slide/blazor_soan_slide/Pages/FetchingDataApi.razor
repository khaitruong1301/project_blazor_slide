@page "/FetchingDataApi"
@using System.Net.Http.Json
@using System.Text.Json;
@using System.Diagnostics;
@using Newtonsoft.Json;
@inject HttpClient Http
@layout HomePageMaster
<button class="btn btn-dark" @onclick="GetItems">Get</button>
@foreach (var item in items)
{
    <h1>@item.name</h1>
}


@code {
    private List<ProductModel> items = new();
    protected override async void OnInitialized()
    {
      
            // Gửi yêu cầu GET đến API
            var response = await Http.GetAsync("https://apistore.cybersoft.edu.vn/api/Product");
            Debug.WriteLine($"Current count is  before increment.");

            if (response.IsSuccessStatusCode)
            {
                // Đọc toàn bộ nội dung JSON từ HttpContent
                dynamic jsonResponse = await response.Content.ReadAsStringAsync();
                HttpResponse<ProductModel> apiResponse = JsonConvert.DeserializeObject<HttpResponse<ProductModel>>(jsonResponse);

                

                @* // Deserialize JSON thành đối tượng ApiResponse<List<ProductModel>>
                var options = new JsonSerializerOptions
                {
                        PropertyNameCaseInsensitive = true, // Cho phép không phân biệt chữ hoa và chữ thường trong tên thuộc tính
                        WriteIndented = true                // Định dạng JSON dễ đọc
                }; *@

                @* HttpResponse<ProductModel> apiResponse = JsonConverter.Deserialize<HttpResponse<ProductModel>>(jsonResponse,options); *@

       

                @* // In ra thông tin sản phẩm
                foreach (var product in products)
                {
                    Console.WriteLine($"ID: {product.Id}, Name: {product.Name}, Price: {product.Price}");
                }
                Console.WriteLine("Product List:");*@

                @* items = products;   *@
            }
            else
            {
                Console.WriteLine($"Failed to fetch data. Status Code: {response.StatusCode}, Reason: {response.ReasonPhrase}");
            }
     
    }


    private async Task GetItems()
    {
        // Sử dụng Debugger.Break() để ngắt luồng thực thi
        Console.WriteLine($"Exception: ");
    }

}
